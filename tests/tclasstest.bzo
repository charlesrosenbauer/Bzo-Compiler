TClassTest #Module
String     #Import





[M'] Monoid :: {
  mappend :: [M', M'] ;; M'
  mapply  :: [] ;; M'
}


Str.Monoid :: {
  mappend :: concat
  mapply  :: ''
}


Int.Monoid :: {
  mappend :: +
  mapply  :: 0
}


[L'] Lattice :: {
  order :: [L', L'] ;; Bl
  top   :: [] ;; L'
  bottom:: [] ;; L'
}

Int.Lattice :: {
  order ::  <
  top   ::  9223372036854775807
  bottom:: -9223372036854775808
}

[T'.(Int,Str)] Tipe :: [T', T']

Tripe :: Str Tipe

"Trope :: Bl  Tipe"

[M'.Monoid] Mot :: [M', M']

[T'.Monoid] Mott :: T' Mot
