"
	A Basic Standard Library for Bzo
	Core Functions
	Currently Incomplete
"





"Core Operation Definitions"
+   :: (N:Num. N) ;; N
+   :: $add-binop

-   :: (N:Num. N) ;; N
-   :: $sub-binop

*   :: (N:Num. N) ;; N
*   :: $mul-binop

//  :: (N:Num. N) ;; N
//  :: $div-binop

/   :: (N:Num. N) ;; (N, ())
(a. b) / :: (a. b) //
(a. 0) / :: ()

%   :: (N:Num. N) ;; N
%   :: $mod-binop



"Comparison Definitions"
>   :: (N:Num. N) ;; Bl
>   :: $gtr-comp-binop

<   :: (N:Num. N) ;; Bl
<   :: $lss-comp-binop

>=  :: (N:Num. N) ;; Bl
>=  :: $gte-comp-binop

=<  :: (N:Num. N) ;; Bl
=<  :: $lse-comp-binop

=   :: (N:Num. N) ;; Bl
=   :: $eql-comp-binop

!=  :: (N:Num. N) ;; Bl
!=  :: $iql-comp-binop



"Core logic"
? :: (Bl. A. B) ;; (A, B)
(True . x. _) ? :: x
(False. _. x) ? :: x

len :: []A ;; Int
len :: $arr-length



"Convenience Math Operations"
+1 :: N:Num ;; N
x +1 :: (x. 1) +

+2 :: N:Num ;; N
x +2 :: (x. 2) +

-1 :: N:Num ;; N
x -1 :: (x. 1) -

-2 :: N:Num ;; N
x -2 :: (x. 2) -

*2 :: N:Num ;; N
x *2 :: (x. 2) *

*3 :: N:Num ;; N
x *3 :: (x. 3) *

/2 :: N:Num ;; (N, ())
x /2 :: (x. 2) /

/3 :: N:Num ;; (N, ())
x /3 :: (x. 3) /

%2 :: N:Num ;; N
x %2 :: (x. 2) %

%3 :: N:Num ;; N
x %3 :: (x. 3) %

^2 :: N:Num ;; N
x ^2 :: (x. x) *

^3 :: N:Num ;; N
x ^3 :: (x. x. x)*

\2 :: N:Num ;; N
x \2 :: (x. 2) \

\3 :: N:Num ;; N
x \3 :: (x. 3) \
